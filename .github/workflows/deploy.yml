# .github/workflows/deploy.yml
name: Deploy Telegram Bot (Self-hosted EC2)

on:
  push:
    branches: [ main ]

env:
  BOT_TOKEN: ${{ secrets.BOT_TOKEN }}

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Pull latest changes from main
        run: |
          cd /home/ubuntu/telegram-bappenas-bot
          git pull origin main

      - name: Setup virtualenv & install dependencies
        run: |
          cd /home/ubuntu/telegram-bappenas-bot

          # Create virtual environment if not exists
          if [ ! -d "bot_env" ]; then
            echo "Creating virtual environment..."
            python3 -m venv bot_env
          fi

          # Activate virtualenv
          source bot_env/bin/activate

          # Upgrade pip and install requirements
          pip install --upgrade pip
          
          # If using requirements.txt in repo
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          else
            # Fallback install for python-telegram-bot
            pip install python-telegram-bot[job-queue] pytz
          fi

      - name: Restart Telegram bot service
        run: |
          sudo systemctl restart telegram-bot.service
          sleep 3
          sudo systemctl status telegram-bot.service --no-pager
          sudo journalctl -u telegram-bot.service -n 10 --no-pager

  notify:
    needs: deploy
    runs-on: self-hosted
    if: always()

    steps:
      - name: Notify via curl
        run: |
          STATUS="${{ job.status }}"
          ICON="üöÄ"
          if [ "$STATUS" != "success" ]; then
            ICON="‚ùå"
          fi

          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_NOTIFY_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d parse_mode=Markdown \
            -d text="$ICON *Deployment Status*: *$STATUS*\n\ üìù *Repository*: ${{ github.repository }}\n\ üåø *Branch*: ${{ github.ref_name }}\n\ üë§ *Author*: ${{ github.actor }}\n\ üí¨ *Commit*: ${{ github.event.head_commit.message }}\n\ ‚è∞ *Time*: ${{ github.event.head_commit.timestamp }}\n\ üîó [View Commit](${{ github.event.head_commit.url }})"



